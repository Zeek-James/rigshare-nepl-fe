name: Deploy RigShare

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build operators app
      run: npm run build:operators
    
    - name: Build admin app
      run: npm run build:admin
    
    - name: Upload operators build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: operators-build
        path: apps/operators/build/
    
    - name: Upload admin build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: admin-build
        path: apps/admin/build/

  deploy-operators:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: operators-build
        path: build/
    
    # Add your deployment steps here
    # Example for AWS S3:
    # - name: Deploy to S3
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   run: |
    #     aws s3 sync build/ s3://your-bucket-name --delete